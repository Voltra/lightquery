{"version":3,"sources":["../../src/LightqueryCollection.js"],"names":["cssEngine","UnsupportedError","InvalidArgumentError","strategies","lqHelpers","NotEnoughElementsError","notEnoughFor","str","rethrow","e","checks","LightqueryCollectionImplDetails","constructor","self","selector","context","previousResults","lightquery","elements","Object","defineProperties","$","get","__cleanElements","uniques","WeakSet","ret","element","passAllChecks","has","every","check","push","add","makeIterable","Symbol","iterator","length","enumerable","i","getSetMethod","value","key","strictDefault","looseDefault","setterRoot","keys","spacedListString","toArray","forEach","root","getElement","defaultValue","strict","loose","first","firstKey","strictMode","ifStrict","callback","__","doOnFirst","onFirst","nameForStrict","arrayMethodDelegate","method","func","args","el","call","classManip","classNames","ifHasClass","ifDoesNotHaveClass","anyCase","clazz","elem","$elem","hasClass","classList","eventShorthand","eventName","listener","trigger","on","getCssProperty","property","styles","getComputedStyle","setCssProperty","style","domEl","selectorFiltering","filter","matchesSelector","emptySelection","dimensionShorthand","cssProperty","css","LightqueryCollection","undefined","defineProperty","configurable","writable","previousResultSet","arrayLike","initStrategy","find","strategy","shouldProcess","process","ready","document","includes","readyState","addEventListener","resize","window","map","mapper","predicate","arr","reduce","reducer","acc","all","any","none","notAll","eq","index","last","text","val","html","attr","name","attributes","prop","data","dataset","hasAttr","hasAttribute","hasProp","hasOwnProperty","hasData","className","contains","matches","addClass","removeClass","remove","toggleClass","toggle","removeAttr","removeAttribute","removeProp","removeData","eventNames","events","event","off","removeEventListener","options","eventObjectFactory","opts","CustomEvent","eventOptions","extend","target","eventObj","dispatchEvent","closest","closests","children","parent","parentElement","parents","cur","$found","prevAll","previousElementSibling","nextAll","nextElementSibling","siblings","prev","next","append","forElements","onElement","onElements","appendTo","forElement","onLq","$e","onString","prepend","prependTo","before","doInsert","insertBefore","es","after","nextSibling","insertAfter","empty","innerHTML","properties","Array","entries","props","cssVar","variable","varname","css_variables","regex","no_trailing","test","getPropertyValue","setProperty","animate","keyframes","click","doubleClick","mouseUp","mouseDown","mouseEnter","mouseLeave","hover","onEnter","onLeave","focus","blur","change","input","submit","contextMenu","width","clientWidth","height","clientHeight","borderBoxWidth","borderLeftWidth","borderRightWidth","borderLeft","borderRight","string","parsePx","some","x","borderBoxHeight","borderTopWidth","borderBottomWidth","borderTop","borderBottom","marginBoxWidth","marginLeft","marginRight","mleft","mright","outerWidth","marginBoxHeight","marginTop","marginBottom","mtop","mbottom","outerHeight"],"mappings":"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","sourceRoot":"./src/","sourcesContent":["import { cssEngine } from \"./CssEngine\"\r\nimport UnsupportedError from \"./errors/UnsupportedError\"\r\nimport InvalidArgumentError from \"./errors/InvalidArgumentError\"\r\nimport { strategies } from \"./strategies/init\"\r\nimport lqHelpers from \"./utils/helpers\"\r\nimport \"./utils/typedefs\"\r\nimport NotEnoughElementsError from \"./errors/NotEnoughElementsError\";\r\n\r\n\r\n\r\n/**\r\n * @callback LightqueryCollection~onFirst\r\n * @template R\r\n * @param {Element} first\r\n * @returns {R}\r\n */\r\n\r\n/**\r\n * @callback LightqueryCollection~setterRoot\r\n * @template X\r\n * @param {Element} e\r\n * @returns {X}\r\n */\r\n\r\n/**\r\n * @callback LightqueryCollection~setValueFactory\r\n * @template T,U,V\r\n * @param {T} oldValue\r\n * @param {U} destObject\r\n * @param {string} key\r\n * @returns {V}\r\n */\r\n\r\n/**\r\n * @callback LightqueryCollection~classManipHandler\r\n * @param {DOMTokenList} classList - The class list to alter\r\n * @param {string} clazz - The class which is being altered\r\n * @param {Element} element - The element being modified\r\n * @param {LightqueryCollection} $element - The LightqueryCollection instance to the element being modified\r\n * @returns {any}\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * Callback to throw a prefilled NotEnoughElementsError\r\n * @returns {Callback}\r\n */\r\nconst notEnoughFor = str => () => throw new NotEnoughElementsError(`Not enough elements to apply LightqueryCollection${str})`);\r\n\r\n/**\r\n * Callback to rethrow an exception\r\n * @param {Error} e - The exception to rethrow\r\n * @returns {Callback}\r\n */\r\nconst rethrow = e => () => throw e;\r\n\r\n\r\n/**\r\n * Predicates to satisfy to be an element of a lightquery collection\r\n */\r\nconst checks = [\r\n\te => typeof e !== \"undefined\",\r\n\te => e !== null,\r\n];\r\n\r\n/**\r\n * @class\r\n * @classdesc Class representing the implementation details of a lightquery collection\r\n */\r\nclass LightqueryCollectionImplDetails{\r\n\t/**\r\n\t * @constructor\r\n\t * @param   {LightqueryCollection} self - The LightqueryCollection instance\r\n\t * @param   {Selector} selector - The current selector\r\n\t * @param   {DomElementType|undefined} context - The current context\r\n\t * @param   {Iterable<DomElementType>} previousResults - The previous result set\r\n\t */\r\n\tconstructor(self, selector, context, previousResults){\r\n\t\tthis.self = self;\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @property {LightqueryFactory} lightquery - Instance of lightquery factory used to get the collection\r\n\t\t */\r\n\t\tthis.lightquery = self.constructor.lightquery;\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @property {Selector} selector - The selector used to create this instance\r\n\t\t */\r\n\t\tthis.selector = selector;\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @property {Iterable<Element>} previousResults - The previous results set\r\n\t\t */\r\n\t\tthis.previousResults = previousResults;\r\n\r\n\t\t/**\r\n\t\t * @property {DomElementType[]} elements - The current result set\r\n\t\t */\r\n\t\tthis.elements = [];\r\n\r\n\r\n\t\t/**\r\n\t\t * @property {LightqueryFactory} $ -  Alias for LightqueryCollectionImplDetails#lightquery\r\n\t\t */\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t$: {\r\n\t\t\t\tget: () => this.lightquery,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t__cleanElements(elements){\r\n\t\tconst uniques = new WeakSet();\r\n\t\tconst ret = [];\r\n\r\n\t\tfor(const element of elements){\r\n\t\t\tconst passAllChecks = [\r\n\t\t\t\t...checks,\r\n\t\t\t\te => !uniques.has(e),\r\n\t\t\t].every(check => check(element));\r\n\r\n\t\t\tif(passAllChecks){\r\n\t\t\t\tret.push(element);\r\n\t\t\t\tuniques.add(element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\r\n\t\t/*\r\n\t\t\tasSequence(this.elements)\r\n\t\t\t.filterNotNull()\r\n\t\t\t.filterNot(x => typeof x === \"undefined\")\r\n\t\t\t.distinct()\r\n\t\t\t.toArray();\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Make the LightqueryCollection instance iterable\r\n\t * @private\r\n\t * @readonly\r\n\t */\r\n\tmakeIterable(){\r\n\t\tthis.elements = this.__cleanElements(this.elements);\r\n\r\n\t\tconst { elements, self } = this;\r\n\r\n\t\tObject.defineProperties(self, {\r\n\t\t\t[Symbol.iterator]: {\r\n\t\t\t\tget(){\r\n\t\t\t\t\treturn elements[Symbol.iterator];\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tlength: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tget(){\r\n\t\t\t\t\treturn elements.length;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tfor(const i in elements)\r\n\t\t\tself[i] = elements[i];\r\n\t}\r\n\r\n\t/**\r\n\t * Generic implementation of a get/set method\r\n\t * @template T,U,V,X\r\n\t * @param {object} options\r\n\t * @param {T|LightqueryCollection~setValueFactory<any, X, T>|undefined} options.value - The new value\r\n\t * @param {string} options.key - The key to which the value will be set (from the setter root)\r\n\t * @param {U} [options.strictDefault = null] - The default value if strict mode is on\r\n\t * @param {V} [options.looseDefault = \"\"] - The default value if strict mode is off\r\n\t * @param {LightqueryCollection~setterRoot<X>} [options.setterRoot = (e => e)] - The function to retrieve the setter root\r\n\t * @returns {T|U|V}\r\n\t * @private\r\n\t * @readonly\r\n\t */\r\n\tgetSetMethod({ value, key, strictDefault = null, looseDefault = \"\", setterRoot = e => e}){\r\n\t\tconst keys = lqHelpers.spacedListString.toArray(key);\r\n\t\tconst { self } = this;\r\n\r\n\t\tif(typeof value !== \"undefined\"){ // set\r\n\t\t\tif(typeof value === \"function\"){\r\n\t\t\t\tself.forEach(e => {\r\n\t\t\t\t\tkeys.forEach(key => {\r\n\t\t\t\t\t\tconst root = setterRoot(this.getElement(e));\r\n\t\t\t\t\t\troot[key] = value(root[key], root, key);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}else\r\n\t\t\t\tself.forEach(e => {\r\n\t\t\t\t\tkeys.forEach(key => setterRoot(e)[key] = value);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn self;\r\n\t\t}else{ // get\r\n\t\t\tconst defaultValue = this.defaultValue({\r\n\t\t\t\tstrict: null,\r\n\t\t\t\tloose: \"\",\r\n\t\t\t});\r\n\r\n\t\t\tconst first = this.getElement(self[0]);\r\n\t\t\tconst firstKey = keys[0];\r\n\t\t\treturn first ? setterRoot(first)[firstKey] : defaultValue;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Craft a default value depending on strict mode\r\n\t * @template T,U\r\n\t * @param {object} values\r\n\t * @param {T} options.strict - The default value if strict mode is on\r\n\t * @param {U} options.loose - The default value if strict mode is off\r\n\t * @returns {T|U}\r\n\t */\r\n\tdefaultValue({ strict, loose }){\r\n\t\treturn this.$.strictMode ? strict : loose;\r\n\t}\r\n\r\n\t/**\r\n\t * Execute a callback if strict mode is on\r\n\t * @param {Callback} callback - The callback to execute\r\n\t */\r\n\tifStrict(callback){\r\n\t\tthis.$.__.ifStrict(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * Apply a function on the first element of a LightqueryCollection if it exists\r\n\t * @template R, U\r\n\t * @param {object} options\r\n\t * @param {LightqueryCollection~onFirst<R>} options.onFirst - The function to apply on the first element\r\n\t * @param {string} options.nameForStrict - The name to use on error in strict mode\r\n\t * @param {U} [options.defaultValue = false] - The default value to return if there's no elements and strict mode is off\r\n\t * @returns {R|U}\r\n\t * @throws {NotEnoughElementsError} if strict mode is on and there are not enough elements\r\n\t */\r\n\tdoOnFirst({ onFirst, nameForStrict, defaultValue = false, }){\r\n\t\tconst { self } = this;\r\n\t\tconst first = this.getElement(self[0]);\r\n\r\n\t\tif(!first){\r\n\t\t\tthis.ifStrict(notEnoughFor(nameForStrict));\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\r\n\t\treturn onFirst(first);\r\n\t}\r\n\r\n\t/**\r\n\t * Handle delegating to the array or by string-method reference\r\n\t * @template T\r\n\t * @param {object} options\r\n\t * @param {string} options.method - The array method's name\r\n\t * @param {string|ElementMapper<T>} options.func - The higher order function to execute on each element\r\n\t * @param {any[]} [options.args = []] - The arguments for the string-method-reference\r\n\t * @returns {T[]|any[]}\r\n\t */\r\n\tarrayMethodDelegate({ method, func, args = [], }){\r\n\t\tconst { self } = this;\r\n\r\n\t\tif(typeof func === \"string\"){\r\n\t\t\treturn self[method](e => {\r\n\t\t\t\treturn this.$(e)[func](...args);\r\n\t\t\t});\r\n\t\t}else\r\n\t\t\treturn this.elements[method](e => {\r\n                const el = this.getElement(e);\r\n\t\t\t    return func.call(el, el);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handle delegating to the class list of each elements\r\n\t * @param {object} options\r\n\t * @param {string} options.classNames - The space separated class names\r\n\t * @param {string} options.nameForStrict - The name to use in the error message if strict mode is on\r\n\t * @param {LightqueryCollection~classManipHandler|undefined} options.ifHasClass - The callback to execute if the element has the class\r\n\t * @param {LightqueryCollection~classManipHandler|undefined} options.ifDoesNotHaveClass - The callback to execute if the element does not have the class\r\n\t * @param {LightqueryCollection~classManipHandler|undefined} options.anyCase - The callback to execute whatever the case is\r\n\t */\r\n\tclassManip({ classNames, nameForStrict, ifHasClass = () => {}, ifDoesNotHaveClass = () => {}, anyCase = () => {} }){\r\n\t\tconst { self, $ } = this;\r\n\r\n\t\tif(typeof classNames === \"string\"){\r\n\t\t\tlqHelpers.spacedListString\r\n\t\t\t.toArray(classNames)\r\n\t\t\t.forEach(clazz => {\r\n\t\t\t\tself.forEach(elem => {\r\n\t\t\t\t    const element = this.getElement(elem);\r\n\t\t\t\t\tconst $elem = $(element);\r\n\r\n\t\t\t\t\tif($elem.hasClass(clazz))\r\n\t\t\t\t\t\tifHasClass(element.classList, clazz, element, $elem);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tifDoesNotHaveClass(element.classList, clazz, element, $elem);\r\n\r\n\r\n\t\t\t\t\tanyCase(element.classList, clazz, element, $elem);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}else\r\n\t\t\tthis.ifStrict(() => throw new InvalidArgumentError(`Expected argument classNames to be a string in LightqueryCollection${nameForStrict}`));\r\n\r\n\t\treturn self;\r\n\t}\r\n\r\n\t/**\r\n\t * Handle event shorthand methods\r\n\t * @param {object} options\r\n\t * @param {string} options.eventName - The name of the event (to listen to/trigger)\r\n\t * @param {EventListener|undefined} options.listener - The event listener to attach\r\n\t * @param {string} options.nameForStrict - The name to use in the error message if strict mode is on\r\n\t */\r\n\teventShorthand({ eventName, listener, nameForStrict }){\r\n\t\tconst { self } = this;\r\n\r\n\t\tif(typeof listener === \"undefined\")\r\n\t\t\treturn self.trigger(eventName);\r\n\t\telse if(typeof listener === \"function\")\r\n\t\t\treturn self.on(eventName, listener);\r\n\t\telse\r\n\t\t\tthis.ifStrict(() => throw new InvalidArgumentError(`Expected argument listener to be undefined or a function in LightqueryCollection${nameForStrict}`));\r\n\r\n\t\treturn self;\r\n\t}\r\n\r\n    /**\r\n     * Get the value of a CSS property\r\n     * @param {DomElementType} element - The element to get properties for\r\n     * @param {string} property - The name of the property\r\n     * @returns {string}\r\n     */\r\n\tgetCssProperty(element, property){\r\n\t    const styles = getComputedStyle(this.getElement(element));\r\n\t    return styles[property];\r\n    }\r\n\r\n    /**\r\n     * Set the value of a CSS property\r\n     * @param {DomElementType} element - The element to set properties for\r\n     * @param {string} property - The name of the property\r\n     * @param {number|string} value - The new value\r\n     */\r\n    setCssProperty(element, property, value){\r\n        this.getElement(element).style[property] = value;\r\n    }\r\n\r\n    /**\r\n     * Get an element from a DOM element\r\n     * @param {DomElementType} domEl\r\n     * @returns {Element}\r\n     */\r\n    getElement(domEl){\r\n        return lqHelpers.elements.getElement(domEl);\r\n    }\r\n\r\n    /**\r\n     * Filter an array based on a CSS selector\r\n     * @param {Element[]} ret\r\n     * @param {string|undefined} selector\r\n     * @returns {LightqueryCollection}\r\n     */\r\n    selectorFiltering(ret, selector){\r\n        switch(typeof selector){\r\n            case \"undefined\":\r\n                return this.$(ret);\r\n\r\n            case \"string\":\r\n                return this.$(ret.filter(el => cssEngine.matchesSelector(selector, el)));\r\n\r\n            default:\r\n                this.ifStrict(() => throw new InvalidArgumentError(\"Expected selector to be a string or undefined in LightqueryCollection#children(selector)\"));\r\n                return this.$.__.emptySelection();\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * Shorthand for dimension get/set method\r\n\t * @param {object} args\r\n\t * @param {string|number|undefined} args.value\r\n\t * @param {string} args.nameForStrict\r\n\t * @param {LightqueryCollection~onFirst<number>} args.onFirst\r\n\t * @param {\"width\"|\"height\"} args.cssProperty\r\n\t * @returns {LightqueryCollection|number|null}\r\n\t */\r\n\tdimensionShorthand({ value, nameForStrict, onFirst, cssProperty }){\r\n\t\tif(typeof value === \"undefined\"){ // get\r\n\t\t\treturn this.doOnFirst({\r\n\t\t\t\tnameForStrict,\r\n\t\t\t\tdefaultValue: null,\r\n\t\t\t\tonFirst,\r\n\t\t\t});\r\n\t\t}else{ // set\r\n\t\t\tswitch(typeof value){\r\n\t\t\t\tcase \"number\":\r\n\t\t\t\t\tthis.self.css(cssProperty, `${value}px`);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tthis.self.css(cssProperty, value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.ifStrict(() => throw new InvalidArgumentError(`Expected value to be a string or a number in LightqueryCollection${nameForStrict}`));\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\treturn this.self;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * @class\r\n * @classdesc Class representing the results of a lightquery operation\r\n */\r\nclass LightqueryCollection{\r\n\t/**\r\n\t * @throws {InvalidArgumentError} If the selector is invalid\r\n\t * @param {Selector} selector - The selector\r\n\t * @param {DomElementType|undefined} [context = undefined] - The selection context\r\n\t * @param {Iterable<DomElementType>} [previousResults = []] - The previous results set\r\n\t */\r\n\tconstructor(selector, context = undefined, previousResults = []){\r\n\t\t/**\r\n\t\t * Private methods and properties\r\n\t\t * @protected\r\n\t\t * @readonly\r\n\t\t * @property {LightqueryCollectionImplDetails} __ - The protected implementation details\r\n\t\t */\r\n\t\tObject.defineProperty(this, \"__\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: false,\r\n\t\t\twritable: false,\r\n\t\t\tvalue: new LightqueryCollectionImplDetails(this, selector, context, previousResults)\r\n\t\t});\r\n\r\n\t\tconst previousResultSet = lqHelpers.arrayLike.toArray(previousResults);\r\n\t\tconst initStrategy = strategies.find(strategy => strategy.shouldProcess(selector, context, previousResultSet));\r\n\r\n\t\tif(initStrategy) {\r\n\t\t\tthis.__.elements = initStrategy.process(selector, context, previousResultSet);\r\n\t\t}else{\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(`Invalid selector \"${selector}\"`));\r\n\t\t\tthis.__.elements = previousResultSet;\r\n\t\t}\r\n\r\n\t\tthis.__.makeIterable(this);\r\n\t}\r\n\r\n\r\n\r\n\t/****************************************************************************************\\\r\n\t * Utils\r\n\t\\****************************************************************************************/\r\n\t/**\r\n\t * Execute a callback when the document is ready (only if the selector is the document)\r\n\t * @param   {EventListener}             callback - The event listener to bind\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {UnsupportedError} If it cannot attach event listeners\r\n\t */\r\n\tready(callback){\r\n\t\tif(this.__.selector === document){\r\n\t\t\tif([\"complete\", \"interactive\"].includes(document.readyState))\r\n\t\t\t\tcallback.call(document);\r\n\r\n\t\t\tif(typeof document.addEventListener == \"function\"){\r\n\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", callback, false);\r\n\t\t\t}else\r\n\t\t\t\tthrow new UnsupportedError(\"Cannot attach document ready event handler\");\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to resize events (includes orientation change)\r\n\t * @param {EventListener} listener - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tresize(listener){\r\n\t\tif(this.__.selector !== window){\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Can only attach resize events on the window object\"));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this.on(\"resize orientationchange\", listener);\r\n\t}\r\n\r\n\r\n\r\n\t/****************************************************************************************\\\r\n\t * Iteration methods\r\n\t\\****************************************************************************************/\r\n\t/**\r\n\t * Execute a function on each element\r\n\t * @param {ElementCallback} callback - The function to execute\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tforEach(callback){\r\n\t\tfor(const element of this)\r\n\t\t\tcallback.call(element, element);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Map each element\r\n     * @template U\r\n\t * @param   {ElementMapper<U>|string} mapper - The mapping function\r\n\t * @param   {...any} args - Arguments for string callable\r\n\t * @returns {U[]|any[]}\r\n\t *\r\n\t * @example <caption>Same as <code>µ(\"form input\").map(e => µ(e).val());</code></caption>\r\n\t * µ(\"form input\").map(\"val\");\r\n\t *\r\n\t * @example <caption>Same as <code>µ(\"form input[type=\"checkbox\"]\").map(e => µ(e).hasAttr(\"checked\"));</code></caption>\r\n\t * µ(\"form input[type=\"checkbox\"]\").map(\"hasAttr\", \"checked\");\r\n\t */\r\n\tmap(mapper, ...args){\r\n\t\treturn this.__.arrayMethodDelegate({\r\n\t\t\tmethod: \"map\",\r\n\t\t\tfunc: mapper,\r\n\t\t\targs,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Filter elements\r\n\t * @param   {Predicate<DomElementType>|string} predicate - The predicate function\r\n\t * @param   {...any} args - Arguments for string callable\r\n\t * @returns {LightqueryCollection}\r\n\t *\r\n\t * @example <caption>Same as <code>µ(\"form input\").filter(e => µ(e).hasAttr(\"checked\"));</code></caption>\r\n\t * µ(\"form input\").filter(\"hasAttr\", \"checked\");\r\n\t */\r\n\tfilter(predicate, ...args){\r\n\t\tconst arr = this.__.arrayMethodDelegate({\r\n\t\t\tmethod: \"filter\",\r\n\t\t\tfunc: predicate,\r\n\t\t\targs,\r\n\t\t});\r\n\r\n\t\treturn this.__.$(arr);\r\n\t}\r\n\r\n    /**\r\n     * Reduce the set of elements to a single return value\r\n     * @template T\r\n     * @param {ElementReducer<T>} reducer - The reducing function\r\n     * @param {T|undefined} [acc = undefined] - The initial value of the accumulator\r\n     * @returns {T|undefined}\r\n     */\r\n\treduce(reducer, acc = undefined){\r\n\t    return this.__.elements.reduce(reducer, acc);\r\n    }\r\n\r\n\t/**\r\n\t * Determine whether or not all the elements match the given predicate\r\n\t * @param   {Predicate<DomElementType>|string} predicate - The predicate function\r\n\t * @param   {...any} args - Arguments for string callable\r\n\t * @returns {boolean}\r\n\t */\r\n    all(predicate, ...args){\r\n\t\treturn this.__.arrayMethodDelegate({\r\n\t\t\tmethod: \"every\",\r\n\t\t\tfunc: predicate,\r\n\t\t\targs,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Determine whether or not any of the elements match the given predicate\r\n\t * @param   {Predicate<DomElementType>|string} predicate - The predicate function\r\n\t * @param   {...any} args - Arguments for string callable\r\n\t * @returns {boolean}\r\n\t */\r\n\tany(predicate, ...args){\r\n\t\treturn this.__.arrayMethodDelegate({\r\n\t\t\tmethod: \"some\",\r\n\t\t\tfunc: predicate,\r\n\t\t\targs,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Determine whether or not none of the elements match the given predicate\r\n\t * @param   {Predicate<DomElementType>|string} predicate - The predicate function\r\n\t * @param   {...any} args - Arguments for string callable\r\n\t * @returns {boolean}\r\n\t */\r\n\tnone(predicate, ...args){\r\n\t\treturn !this.any(predicate, ...args);\r\n\t}\r\n\r\n\t/**\r\n\t * Determine whether or not some of the elements do not match the given predicate\r\n\t * @param   {Predicate<DomElementType>|string} predicate - The predicate function\r\n\t * @param   {...any} args - Arguments for string callable\r\n\t * @returns {boolean}\r\n\t */\r\n\tnotAll(predicate, ...args){\r\n\t\treturn !this.all(predicate, ...args);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the result set to an array\r\n\t * @returns {DomElementType[]}\r\n\t */\r\n\ttoArray(){\r\n\t\treturn lqHelpers.arrayLike.toArray(this.__.elements);\r\n\t}\r\n\r\n\r\n\r\n\t/****************************************************************************************\\\r\n\t * Single item methods\r\n\t\\****************************************************************************************/\r\n\t/**\r\n\t * Get the item at the given index\r\n\t * @param   {number}   index - The index of the item to retrieve\r\n\t * @returns {LightqueryCollection|null}\r\n\t */\r\n\teq(index){\r\n\t\tconst defaultValue = this.__.defaultValue({\r\n\t\t\tstrict: null,\r\n\t\t\tloose: this.__.lightquery.__.emptySelection(),\r\n\t\t});\r\n\r\n\t\tif(index >= 0 && index < this.length)\r\n\t\t\treturn this[index] ? this.__.$(this[index]) : defaultValue;\r\n\t\telse\r\n\t\t\treturn defaultValue;\r\n\t}\r\n\r\n    /**\r\n     * Get the first item\r\n     * @returns {LightqueryCollection|null}\r\n     */\r\n\tfirst(){\r\n\t    return this.eq(0);\r\n    }\r\n\r\n    /**\r\n     * Get the last item\r\n     * @returns {LightqueryCollection|null}\r\n     */\r\n    last(){\r\n\t    return this.eq(this.length - 1);\r\n    }\r\n\r\n\t/**\r\n\t * Get/set the text content\r\n\t * @param   {LightqueryCollection~setValueFactory<string, DomElementType, string>|string|number|null|undefined} [value = undefined] - The new value (or its factory)\r\n\t * @returns {LightqueryCollection|string|null}\r\n\t */\r\n    text(value = undefined){\r\n    \treturn this.__.getSetMethod({\r\n\t\t\tvalue,\r\n\t\t\tkey: \"textContent\",\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get/set the value of an input field\r\n\t * @param   {LightqueryCollection~setValueFactory<string, DomElementType, string>|string|number|null|undefined} [value = undefined] - The new value (or its factory)\r\n\t * @returns {LightqueryCollection|string|null}\r\n\t */\r\n\tval(value = undefined){\r\n\t\treturn this.__.getSetMethod({\r\n\t\t\tvalue,\r\n\t\t\tkey: \"value\",\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get/set the html content\r\n\t * @param   {LightqueryCollection~setValueFactory<string, DomElementType, string>|string|undefined} [value = undefined] - The new HTML content\r\n\t * @returns {LightqueryCollection|string|null}\r\n\t */\r\n\thtml(value = undefined){\r\n\t\treturn this.__.getSetMethod({\r\n\t\t\tvalue,\r\n\t\t\tkey: \"innerHTML\",\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get/set an attribute's value\r\n\t * @param {string} name The name of the attribute\r\n\t * @param   {LightqueryCollection~setValueFactory<string, NamedNodeMap, string>|string|undefined} [value = undefined] - The new value\r\n\t * @returns {LightqueryCollection|string|null}\r\n\t */\r\n\tattr(name, value = undefined){\r\n\t\treturn this.__.getSetMethod({\r\n\t\t\tvalue,\r\n\t\t\tkey: name,\r\n\t\t\tsetterRoot: e => e.attributes,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get/set a property's value\r\n\t * @param {string} name The name of the property\r\n\t * @param   {LightqueryCollection~setValueFactory<string, DOMStringMap, string>|string|undefined} [value = undefined] - The new value\r\n\t * @returns {LightqueryCollection|string|number|null|undefined}\r\n\t */\r\n\tprop(name, value = undefined){\r\n\t\treturn this.__.getSetMethod({\r\n\t\t\tvalue,\r\n\t\t\tkey: name,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get/set a data attribute's value\r\n\t * @param {string} name The name of the data attribute\r\n\t * @param   {LightqueryCollection~setValueFactory<string, DomElementType, string>|string|undefined} [value = undefined] - The new value\r\n\t * @returns {LightqueryCollection|string|null}\r\n\t */\r\n\tdata(name, value = undefined){\r\n\t\treturn this.__.getSetMethod({\r\n\t\t\tvalue,\r\n\t\t\tkey: name,\r\n\t\t\tsetterRoot: e => e.dataset,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Determine whether or not the first element has the given attribute\r\n\t * @param   {string}  attr - The attribute's name\r\n\t * @returns {boolean}\r\n\t * @throws {InvalidArgumentError} If strict mode is on and attr is not a string\r\n\t * @throws {NotEnoughElementsError} If strict mode is on and there are no elements\r\n\t */\r\n\thasAttr(attr){\r\n\t\tif(typeof attr !== \"string\"){\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected attr to be a string in LightqueryCollection#hasAttr(attr)\"));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tnameForStrict: \"#hasAttribute(attr)\",\r\n\t\t\tonFirst: first => first.hasAttribute(attr),\r\n\t\t\tdefaultValue: false,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Determine whether or not the first element has the given property\r\n\t * @param   {string}  prop - The property's name\r\n\t * @returns {boolean}\r\n\t * @throws {InvalidArgumentError} If strict mode is on and prop is not a string\r\n\t * @throws {NotEnoughElementsError} If strict mode is on and there are no elements\r\n\t */\r\n\thasProp(prop){\r\n\t\tif(typeof prop !== \"string\"){\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected prop to be a string in LightqueryCollection#hasProp(prop)\"));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tnameForStrict: \"#hasProp(prop)\",\r\n\t\t\tonFirst: first => first.hasOwnProperty(prop),\r\n\t\t\tdefaultValue: false,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Determine whether or not the first element has the given data attribute\r\n\t * @param   {string}  data - The data attribute's name\r\n\t * @returns {boolean}\r\n\t * @throws {InvalidArgumentError} If strict mode is on and data is not a string\r\n\t * @throws {NotEnoughElementsError} If strict mode is on and there are no elements\r\n\t */\r\n\thasData(data){\r\n\t\tif(typeof data !== \"string\"){\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected data to be a string in LightqueryCollection#hasData(data)\"));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tnameForStrict: \"#hasData(data)\",\r\n\t\t\tonFirst: first => data in first.dataset,\r\n\t\t\tdefaultValue: false,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Determine whether or not the first element has the given class applied\r\n\t * @param   {string}  classNames - The class names to have\r\n\t * @returns {boolean}\r\n\t * @throws {InvalidArgumentError} If strict mode is on and classNames is not a string\r\n\t * @throws {NotEnoughElementsError} If strict mode is on and there are no elements\r\n\t */\r\n\thasClass(classNames){\r\n\t\tif(typeof classNames !== \"string\"){\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected classNames to be a string in LightqueryCollection#hasClass(classNames)\"));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tnameForStrict: \"#hasClass(className)\",\r\n\t\t\tonFirst: first => {\r\n\t\t\t\t// first.classList.contains(classNames)\r\n\t\t\t\tconst { classList } = first;\r\n\r\n\t\t\t\treturn lqHelpers\r\n\t\t\t\t\t.spacedListString\r\n\t\t\t\t\t.toArray(classNames)\r\n\t\t\t\t\t.every(className => classList.contains(className));\r\n\t\t\t},\r\n\t\t\tdefaultValue: false,\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * Determine whether or not the first element matches the given selector\r\n     * @param {string} selector - The CSS selector to match against\r\n     * @returns {boolean}\r\n     */\r\n\tmatches(selector){\r\n\t\tif(typeof selector !== \"string\"){\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected selector to be a string in LightqueryCollection#matches(selector)\"));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tnameForStrict: \"#matches(selector)\",\r\n\t\t\tonFirst: first => cssEngine.matchesSelector(selector, first),\r\n\t\t\tdefaultValue: false,\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\t/****************************************************************************************\\\r\n\t * Multiple items methods\r\n\t\\****************************************************************************************/\r\n\t/**\r\n\t * Add the given classes to each element\r\n\t * @param   {string}               classNames - The space separated list of classes to add\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If classNames is not a string\r\n\t */\r\n\taddClass(classNames){\r\n\t\treturn this.__.classManip({\r\n\t\t\tnameForStrict: \"#addClass(classNames)\",\r\n\t\t\tclassNames,\r\n\t\t\tifDoesNotHaveClass(classList, clazz, elem, $elem){\r\n\t\t\t\tclassList.add(clazz);\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the given classes from each element\r\n\t * @param   {string}               classNames - The space separated list of classes to remove\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If classNames is not a string\r\n\t */\r\n\tremoveClass(classNames){\r\n\t\treturn this.__.classManip({\r\n\t\t\tnameForStrict: \"#removeClass(classNames)\",\r\n\t\t\tclassNames,\r\n\t\t\tifHasClass(classList, clazz, elem, $elem){\r\n\t\t\t\tclassList.remove(clazz);\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle the given classes for each element\r\n\t * @param   {string}               classNames - The space separated list of classes to toggle\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If classNames is not a string\r\n\t */\r\n\ttoggleClass(classNames){\r\n\t\treturn this.__.classManip({\r\n\t\t\tnameForStrict: \"#toggleClass(classNames)\",\r\n\t\t\tclassNames,\r\n\t\t\tanyCase(classList, clazz, elem, $elem){\r\n\t\t\t\tclassList.toggle(clazz);\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the attribute for each element\r\n\t * @param {string} attr - The attribute name\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If attr is not a string\r\n\t */\r\n\tremoveAttr(attr){\r\n\t\tif(typeof attr !== \"string\"){\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected attr to be a string in LightqueryCollection#removeAttribute(attr)\"));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this.forEach(el => el.removeAttribute(attr));\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the property for each element\r\n\t * @param {string} prop - The property name\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If prop is not a string\r\n\t */\r\n\tremoveProp(prop){\r\n\t\tif(typeof prop !== \"string\"){\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected prop to be a string in LightqueryCollection#removeProp(prop)\"));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this.forEach(el => delete el[prop]);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the data attribute for each element\r\n\t * @param {string} data - The data attribute name\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If data is not a string\r\n\t */\r\n\tremoveData(data){\r\n\t\tif(typeof data !== \"string\"){\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected data to be a string in LightqueryCollection#removeData(data)\"));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this.forEach(el => delete el.dataset[data])\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Trigger a callback on event\r\n\t * @param   {string}               eventNames - The spaced separated list of events to listen to\r\n\t * @param   {EventListener}        listener   - The event listener\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {UnsupportedError} If it cannot attach the event listener\r\n\t * @throws {InvalidArgumentError} If the listener is not a callable or if eventNames is not a string\r\n\t */\r\n\ton(eventNames, listener){\r\n\t\tif(typeof listener === \"function\"){\r\n\t\t\tif(typeof eventNames === \"string\"){\r\n\t\t\t\tconst events = lqHelpers.spacedListString.toArray(eventNames);\r\n\t\t\t\tthis.forEach(el => {\r\n\t\t\t\t\tevents.forEach(event => {\r\n\t\t\t\t\t\tif(el.addEventListener)\r\n\t\t\t\t\t\t\tel.addEventListener(event, listener);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tthis.__.ifStrict(() => throw new UnsupportedError(\"Cannot attach event listeners\"));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}else\r\n\t\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected eventNames to be a string in LightqueryCollection#on(eventNames, listener)\"));\r\n\t\t}else\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Invalid listener in LightqueryCollection#on(eventNames, listener)\"));\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Unregister an event listener\r\n\t * @param   {string}               eventNames - The spaced separated list of events to stop listening to\r\n\t * @param   {EventListener}        listener   - The event listener that was used\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {UnsupportedError} If it cannot detach the event listener\r\n\t * @throws {InvalidArgumentError} If the listener is not a callable or if eventNames is not a string\r\n\t */\r\n\toff(eventNames, listener){\r\n\t\tif(typeof listener === \"function\"){\r\n\t\t\tif(typeof eventNames === \"string\"){\r\n\t\t\t\tconst events = lqHelpers.spacedListString.toArray(eventNames);\r\n\t\t\t\tthis.forEach(el => {\r\n\t\t\t\t\tevents.forEach(event => {\r\n\t\t\t\t\t\tif(e.removeEventListener)\r\n\t\t\t\t\t\t\te.removeEventListener(event, listener);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tthis.__.ifStrict(() => throw new UnsupportedError(\"Cannot detach event listeners\"));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}else\r\n\t\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected eventNames to be a string in LightqueryCollection#off(eventNames, listener)\"));\r\n\t\t}else\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Invalid listener in LightqueryCollection#off(eventNames, listener)\"));\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger events on each element\r\n\t * @param {string} eventNames - The spaced separated list of events to stop listening to\r\n\t * @param {object} [options = {}] - The event options\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If eventNames is not a string or if options is not an object\r\n\t */\r\n\ttrigger(eventNames, options = {}){\r\n\t\tif(typeof eventNames !== \"string\")\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected eventNames to be a string in LightqueryCollection#trigger(eventNames, options)\"));\r\n\t\tif(typeof options !== \"object\" || options === null)\r\n\t\t\tthis.__.ifStrict(() => throw new InvalidArgumentError(\"Expected options to be an object in LightqueryCollection#trigger(eventNames, options)\"));\r\n\r\n\t\tconst events = lqHelpers.spacedListString.toArray(eventNames);\r\n\r\n\t\tconst eventObjectFactory = (event, opts) => new window.CustomEvent(event, opts);\r\n\r\n\t\tthis.forEach(el => {\r\n\t\t\tconst eventOptions = this.__.$.extend({target: el}, options);\r\n\r\n\t\t\tevents.forEach(event => {\r\n\t\t\t\tconst eventObj = eventObjectFactory(event, eventOptions);\r\n\t\t\t\tel.dispatchEvent(eventObj);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n    /**\r\n     * Get the closest element matching the given selector\r\n     * @param {string} selector - The CSS selector for the closest elements to find\r\n     * @returns {LightqueryCollection}\r\n     */\r\n\tclosest(selector){\r\n\t    if(typeof selector !== \"string\"){\r\n\t        this.__.ifStrict(() => throw new InvalidArgumentError(\"Expected selector to be a string in LightqueryCollection#closest(selector)\"));\r\n\t        return this;\r\n        }\r\n\r\n\t    const closests = this.map(el => el.closest(selector));\r\n\t    return this.__.$(closests);\r\n    }\r\n\r\n    /**\r\n     * Get all the children (that optionally match the given selector)\r\n     * @param {string|undefined} selector - The CSS selector to restrict children to\r\n     * @return {LightqueryCollection}\r\n     */\r\n    children(selector = undefined){\r\n\t    const ret = this.reduce((children, el) => {\r\n\t        if(el.children.length > 0)\r\n\t            children.push(lqHelpers.arrayLike.toArray(el.children));\r\n\r\n\t        return children;\r\n        }, []);\r\n\r\n\t    return this.__.selectorFiltering(ret, selector);\r\n    }\r\n\r\n    /**\r\n     * Get all the parents (filtering by the given selector if there is any)\r\n     * @param {string|undefined} selector - The CSS selector to restrict parents to\r\n     * @returns {LightqueryCollection}\r\n     */\r\n    parent(selector = undefined){\r\n        const ret = this.reduce((arr, el) => {\r\n            if(el.parentElement)\r\n                arr.push(el.parentElement);\r\n\r\n            return arr;\r\n        }, []);\r\n\r\n        return this.__.selectorFiltering(ret, selector);\r\n    }\r\n\r\n    /**\r\n     * Get all the predecessors (parents), filtering by the given selector if there is any\r\n     * @param {string|undefined} selector  - The CSS selector to restrict predecessors to\r\n     * @returns {LightqueryCollection}\r\n     */\r\n    parents(selector = undefined){\r\n        const ret = this.reduce((arr, el) => {\r\n            let cur = el;\r\n\r\n            while(cur.parentElement){\r\n                arr.push(cur.parentElement);\r\n                cur = cur.parentElement;\r\n            }\r\n\r\n            return arr;\r\n        }, []);\r\n\r\n        return this.__.selectorFiltering(ret, selector);\r\n    }\r\n\r\n    /**\r\n     * Get all the descendants (filtering by the given selector if any)\r\n     * @param {string|undefined} selector - The selector to restrict descendants to\r\n     * @returns {LightqueryCollection}\r\n     */\r\n    find(selector = undefined){\r\n        const ret = this.reduce((arr, el) => {\r\n            const $found = this.__.$(selector || \"*\", el);\r\n            arr.push(...$found.__.elements);\r\n            return arr;\r\n        }, []);\r\n\r\n        return this.__.$(ret);\r\n    }\r\n\r\n    /**\r\n     * Reduce the set to the elements that have at least one descendant that matches the selector\r\n     * @param {string} selector\r\n     * @returns {LightqueryCollection}\r\n     */\r\n    has(selector){\r\n        if(typeof selector !== \"string\"){\r\n            this.__.ifStrict(() => throw new InvalidArgumentError(\"Expected selector to be a string in LightqueryCollection#has(selector)\"));\r\n            return this.__.$.__.emptySelection();\r\n        }\r\n\r\n        return this.filter(e => this.__.$(e).find(selector));\r\n    }\r\n\r\n\t/**\r\n\t * Get all the previous siblings (filtering by the given selector if any)\r\n\t * @param {string|undefined} selector - The selector to restrict previous siblings to\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n    prevAll(selector = undefined){\r\n    \tconst ret = this.reduce((arr, el) => {\r\n    \t\tlet cur = el.previousElementSibling;\r\n    \t\twhile(cur !== null){\r\n    \t\t\tarr.push(cur);\r\n    \t\t\tcur = cur.previousElementSibling;\r\n\t\t\t}\r\n\r\n\t\t\treturn arr;\r\n\t\t}, []);\r\n\r\n    \treturn this.__.selectorFiltering(ret, selector);\r\n\t}\r\n\r\n\t/**\r\n\t * Get all the next siblings (filtering by the given selector if any)\r\n\t * @param {string|undefined} selector - The selector to restrict next siblings to\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tnextAll(selector = undefined){\r\n\t\tconst ret = this.reduce((arr, el) => {\r\n\t\t\tlet cur = el.nextElementSibling;\r\n\t\t\twhile(cur !== null){\r\n\t\t\t\tarr.push(cur);\r\n\t\t\t\tcur = cur.nextElementSibling;\r\n\t\t\t}\r\n\r\n\t\t\treturn arr;\r\n\t\t}, []);\r\n\r\n\t\treturn this.__.selectorFiltering(ret, selector);\r\n\t}\r\n\r\n\t/**\r\n\t * Get all the siblings (filtering by the given selector if any)\r\n\t * @param {string|undefined} selector - The selector to restrict siblings to\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tsiblings(selector = undefined){\r\n\t\treturn this.prevAll(selector).add(this.nextAll(selector));\r\n\t}\r\n\r\n\t/**\r\n\t * Get the previous sibling of each element\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tprev(){\r\n\t\tconst ret = this.map(e => this.__.getElement(e).previousElementSibling);\r\n\t\treturn this.__.$(ret);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the next sibling of each element\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tnext(){\r\n\t\tconst ret = this.map(e => this.__.getElement(e).nextElementSibling);\r\n\t\treturn this.__.$(ret);\r\n\t}\r\n\r\n\r\n\r\n\t/****************************************************************************************\\\r\n\t * DOM based\r\n    \\****************************************************************************************/\r\n\t/**\r\n\t * Append the given elements to the first result of the results set\r\n\t * @param {ElementsOrLightquery} elements - The elements to append\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tappend(elements){\r\n        const nameForStrict = \"#append(elements)\";\r\n\r\n        return this.__.doOnFirst({\r\n            onFirst: el => {\r\n                lqHelpers.elements.forElements({\r\n                    elements,\r\n                    LightqueryCollection,\r\n                    nameForStrict,\r\n\r\n                    onElement: e => el.append(e),\r\n                    onElements: e => el.append(...e),\r\n                });\r\n\r\n                return this;\r\n            },\r\n            nameForStrict,\r\n            defaultValue: this,\r\n        });\r\n\r\n    }\r\n\r\n\t/**\r\n\t * Appends the result set to the given element\r\n\t * @param {ElementOrLightquery|string} element - The element to append to (or a CSS selector to it)\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tappendTo(element){\r\n\t\ttry{\r\n\t\t\tlqHelpers.elements.forElement({\r\n\t\t\t\telement,\r\n\t\t\t\tLightqueryCollection,\r\n\t\t\t\tnameForStrict: \"#appendTo\",\r\n\t\t\t\tonLq: $e => $e.append(this),\r\n\t\t\t\tonElement: e => this.appendTo(this.__.$(this.__.getElement(e))),\r\n\t\t\t\tonString: selector => this.appendTo(this.__.$(selector)),\r\n\t\t\t});\r\n\t\t}catch(e){\r\n\t\t\tthis.__.ifStrict(rethrow(e));\r\n\t\t}\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * Prepend the given elements to the first result of the results set\r\n\t * @param {ElementsOrLightquery} elements - The elements to prepend\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tprepend(elements){\r\n\t\tconst nameForStrict = \"#append(elements)\";\r\n\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tonFirst: el => {\r\n\t\t\t\tlqHelpers.elements.forElements({\r\n\t\t\t\t\telements,\r\n\t\t\t\t\tLightqueryCollection,\r\n\r\n\t\t\t\t\tonElement: e => el.prepend(e),\r\n\t\t\t\t\tonElements: e => el.prepend(...e),\r\n\t\t\t\t\tnameForStrict,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tdefaultValue: this,\r\n\t\t\tnameForStrict,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Appends the result set to the given element\r\n\t * @param {ElementOrLightquery|string} element - The element to append to (or a CSS selector to it)\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tprependTo(element){\r\n\t\ttry{\r\n\t\t\tlqHelpers.elements.forElement({\r\n\t\t\t\telement,\r\n\t\t\t\tLightqueryCollection,\r\n\t\t\t\tnameForStrict: \"#prependTo(element)\",\r\n\t\t\t\tonLq: $e => $e.prepend(this),\r\n\t\t\t\tonElement: e => this.prependTo(this.__.$(this.__.getElement(e))),\r\n\t\t\t\tonString: selector => this.prependTo(this.__.$(selector)),\r\n\t\t\t});\r\n\t\t}catch(e){\r\n\t\t\tthis.__.ifStrict(rethrow(e));\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Insert the given elements before the first result\r\n\t * @param {ElementsOrLightquery} elements - The elements to insert\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tbefore(elements){\r\n\t\tconst nameForStrict = \"#after(elements)\";\r\n\r\n\t\tconst doInsert = el => e => el.parentElement.insertBefore(e, el);\r\n\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tonFirst: el => {\r\n\t\t\t\tconst onElement = doInsert(el);\r\n\r\n\t\t\t\tlqHelpers.elements.forElements({\r\n\t\t\t\t\telements,\r\n\t\t\t\t\tLightqueryCollection,\r\n\r\n\t\t\t\t\tonElement,\r\n\t\t\t\t\tonElements: es => {\r\n\t\t\t\t\t\tfor(const e of es)\r\n\t\t\t\t\t\t\tonElement(e);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnameForStrict,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tdefaultValue: this,\r\n\t\t\tnameForStrict,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Insert the result set before the given element\r\n\t * @param {ElementOrLightquery|string} element - The element to insert elements before (or a CSS selector to it)\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tinsertBefore(element){\r\n\t\ttry{\r\n\t\t\tlqHelpers.elements.forElement({\r\n\t\t\t\telement,\r\n\t\t\t\tLightqueryCollection,\r\n\t\t\t\tnameForStrict: \"#insertBefore(element)\",\r\n\r\n\t\t\t\tonLq: $e => $e.before(this),\r\n\t\t\t\tonElement: e => this.insertBefore(this.__.$(this.__.getElement(e))),\r\n\t\t\t\tonString: selector => this.insertBefore(this.__.$(selector)),\r\n\t\t\t});\r\n\t\t}catch(e){\r\n\t\t\tthis.__.ifStrict(rethrow(e));\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Insert the given elements after the first result\r\n\t * @param {ElementsOrLightquery} elements - The elements to insert\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tafter(elements){\r\n\t\tconst nameForStrict = \"#after(elements)\";\r\n\r\n\t\tconst doInsert = el => e => {\r\n\t\t\tconst parent = el.parentElement;\r\n\t\t\tparent.insertBefore(e, el.nextSibling);\r\n\t\t};\r\n\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tonFirst: el => {\r\n\t\t\t\tconst onElement = doInsert(el);\r\n\r\n\t\t\t\tlqHelpers.elements.forElements({\r\n\t\t\t\t\telements,\r\n\t\t\t\t\tLightqueryCollection,\r\n\r\n\t\t\t\t\tonElement,\r\n\t\t\t\t\tonElements: es => {\r\n\t\t\t\t\t\tfor(const e of es)\r\n\t\t\t\t\t\t\tonElement(e);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnameForStrict,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tdefaultValue: this,\r\n\t\t\tnameForStrict,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Insert the result set after the given element\r\n\t * @param {ElementOrLightquery|string} element - The element to insert elements after (or a CSS selector to it)\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tinsertAfter(element){\r\n\t\ttry{\r\n\t\t\tlqHelpers.elements.forElement({\r\n\t\t\t\telement,\r\n\t\t\t\tLightqueryCollection,\r\n\t\t\t\tnameForStrict: \"#insertBefore(element)\",\r\n\r\n\t\t\t\tonLq: $e => $e.after(this),\r\n\t\t\t\tonElement: e => this.insertAfter(this.__.$(this.__.getElement(e))),\r\n\t\t\t\tonString: selector => this.insertAfter(this.__.$(selector)),\r\n\t\t\t});\r\n\t\t}catch(e){\r\n\t\t\tthis.__.ifStrict(rethrow(e));\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the elements from the DOM\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tremove(){\r\n\t\tthis.forEach(e => this.__.getElement(e).remove());\r\n\t\treturn this.__.$.__.emptySelection();\r\n\t}\r\n\r\n\t/**\r\n\t * Empty the content of each element\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n\tempty(){\r\n\t\treturn this.forEach(e => this.__.getElement(e).innerHTML = \"\");\r\n\t}\r\n\r\n\r\n\r\n    /****************************************************************************************\\\r\n     * Misc.\r\n    \\****************************************************************************************/\r\n    /**\r\n     * Add elements to the set of results\r\n     * @param {Selector} selector - The selector for the new elements\r\n     * @param {DomElementType|undefined} context\r\n     * @returns {LightqueryCollection}\r\n     */\r\n\tadd(selector, context = undefined){\r\n\t\treturn this.__.$(selector, context, this);\r\n    }\r\n\r\n    /**\r\n     * Getter/setter for CSS properties\r\n     * @param {string|string[]|Record<string, string|number>} properties - The property (or properties) to get/set\r\n     * @param {string|number|undefined} value - The new value of the property (or properties)\r\n     * @returns {LightqueryCollection|string|number|null}\r\n     */\r\n    css(properties, value = undefined){\r\n        if(typeof value === \"undefined\"){\r\n            if(properties instanceof Array){ // get all values from first\r\n                return this.__.doOnFirst({\r\n                    nameForStrict: \"#css(properties, value)\",\r\n                    defaultValue: {},\r\n                    onFirst: el => {\r\n                        return properties.reduce((ret, property) => {\r\n                            if(typeof property !== \"string\"){\r\n                                this.__.ifStrict(() => throw new InvalidArgumentError(`Property \"${property}\" is not a string`));\r\n                            }else\r\n                                ret[property] = this.__.getCssProperty(el, property);\r\n\r\n                            return ret;\r\n                        }, {});\r\n                    },\r\n                });\r\n            }else if(properties && typeof properties === \"object\"){ // set all values for all\r\n                Object.entries(properties)\r\n                    .forEach(([prop, val]) => {\r\n                        this.forEach(el => this.__.setCssProperty(el, prop, val));\r\n                    });\r\n\r\n                return this;\r\n            }else if(typeof properties === \"string\"){ // get value from first\r\n                return this.__.doOnFirst({\r\n                    nameForStrict: \"#css(properties, value)\",\r\n                    defaultValue: \"\",\r\n                    onFirst: el => this.__.getCssProperty(el, properties),\r\n                });\r\n            }else{\r\n                this.__.ifStrict(() => throw new InvalidArgumentError(\"Invalid properties in LightqueryCollection#css(properties, value)\"));\r\n                return \"\";\r\n            }\r\n        }else{ // set values for all\r\n            const props = properties instanceof Array ? properties : [properties];\r\n\r\n            this.forEach(el => props.forEach(prop => {\r\n                if(typeof prop !== \"string\"){\r\n                    this.__.ifStrict(() => throw new InvalidArgumentError(`Property \"${prop}\" is not a string`));\r\n                    return;\r\n                }\r\n\r\n                this.__.setCssProperty(el, prop, value);\r\n            }));\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Getter/setter for CSS variables at the root\r\n     * @param {string} variable - The CSS variable name\r\n     * @param {string|number|undefined} value - The new value\r\n     * @returns {LightqueryCollection|string|number|null}\r\n     */\r\n    cssVar(variable, value){\r\n        if(typeof variable !== \"string\"){\r\n            this.__.ifStrict(() => throw new InvalidArgumentError(\"Expected variable to be a string in LightqueryCollection#cssVar(variable, value)\"));\r\n            return typeof value === \"undefined\" ? null : this;\r\n        }\r\n\r\n        const varname = lqHelpers.css_variables.regex.no_trailing.test(variable) ? `--${variable}` : variable;\r\n\r\n        if(typeof value === \"undefined\"){ // get\r\n            return this.__.doOnFirst({\r\n                nameForStrict: \"#cssVar(variable, value)\",\r\n                defaultValue: null,\r\n                onFirst: el => getComputedStyle(el).getPropertyValue(varname),\r\n            });\r\n        }else // set\r\n            return this.forEach(el => el.style.setProperty(varname, value));\r\n    }\r\n\r\n\t/**\r\n\t * Animate all the elements\r\n\t * @param {Keyframe[]|PropertyIndexedKeyframes|null} [keyframes = null] - The animation keyframes\r\n\t * @param {KeyframeAnimationOptions|number|null} [options = null] - The animation options (or duration in ms)\r\n\t * @returns {LightqueryCollection}\r\n\t */\r\n    animate(keyframes = null, options = null){\r\n\r\n    \treturn this.forEach(e => {\r\n\t\t\te.animate(keyframes, options);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\t/****************************************************************************************\\\r\n\t * Events shorthand\r\n\t\\****************************************************************************************/\r\n\t/**\r\n\t * Trigger (or listen to) click events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tclick(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\teventName: \"click\",\r\n\t\t\tnameForStrict: \"#click(listener)\",\r\n\t\t\tlistener,\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) double-click events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tdoubleClick(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#doubleClick(listener)\",\r\n\t\t\teventName: \"dblclick\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) mouse down events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tmouseUp(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#mouseUp(listener)\",\r\n\t\t\teventName: \"mouseUp\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) mouse down events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tmouseDown(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#mouseDown(listener)\",\r\n\t\t\teventName: \"mousedown\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) mouse entering events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tmouseEnter(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#mouseEnter(listener)\",\r\n\t\t\teventName: \"mouseenter\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) mouse leaving events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tmouseLeave(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#mouseLeave(listener)\",\r\n\t\t\teventName: \"mouseleave\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * Listen to hovering events\r\n     * @param {EventListener} onEnter - The listener to call on enter\r\n     * @param {EventListener} onLeave - The listener to call on leave\r\n     * @returns {LightqueryCollection}\r\n     */\r\n\thover(onEnter, onLeave){\r\n\t\treturn this.mouseEnter(onEnter).mouseLeave(onLeave);\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) focus events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tfocus(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#focus(listener)\",\r\n\t\t\teventName: \"focus\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) blur events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tblur(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#blur(listener)\",\r\n\t\t\teventName: \"blur\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) change events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tchange(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#change(listener)\",\r\n\t\t\teventName: \"change\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) input events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tinput(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#input(listener)\",\r\n\t\t\teventName: \"input\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) submit events\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tsubmit(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#submit(listener)\",\r\n\t\t\teventName: \"submit\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger (or listen to) contextmenu events (i.e. right click menu)\r\n\t * @param {EventListener|undefined} [listener = undefined] - The event listener to attach\r\n\t * @returns {LightqueryCollection}\r\n\t * @throws {InvalidArgumentError} If the listener is neither undefined nor a callback\r\n\t */\r\n\tcontextMenu(listener = undefined){\r\n\t\treturn this.__.eventShorthand({\r\n\t\t\tnameForStrict: \"#contextMenu(listener)\",\r\n\t\t\teventName: \"contextmenu\",\r\n\t\t\tlistener,\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\t/****************************************************************************************\\\r\n\t * Dimensions\r\n\t\\****************************************************************************************/\r\n\t/**\r\n\t * Get/set the width\r\n\t * @param {string|number|undefined} [value = undefined] - The new value\r\n\t * @returns {LightqueryCollection|number|null}\r\n\t */\r\n\twidth(value = undefined){\r\n\t\treturn this.__.dimensionShorthand({\r\n\t\t\tvalue,\r\n\t\t\tnameForStrict: \"#width(value)\",\r\n\t\t\tcssProperty: \"width\",\r\n\t\t\tonFirst: el => el.clientWidth,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get/set the height\r\n\t * @param {string|number|undefined} [value = undefined] - The new value\r\n\t * @returns {LightqueryCollection|number|null}\r\n\t */\r\n\theight(value = undefined){\r\n\t\treturn this.__.dimensionShorthand({\r\n\t\t\tvalue,\r\n\t\t\tnameForStrict: \"#height(value)\",\r\n\t\t\tcssProperty: \"height\",\r\n\t\t\tonFirst: el => el.clientHeight,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the outer width of the first element (up to borders)\r\n\t * @returns {number|null}\r\n\t */\r\n\tborderBoxWidth(){\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tnameForStrict: \"#borderBoxWidth()\",\r\n\t\t\tdefaultValue: null,\r\n\t\t\tonFirst: el => {\r\n\t\t\t\tconst { borderLeftWidth, borderRightWidth } = getComputedStyle(el);\r\n\t\t\t\tconst [borderLeft, borderRight] = [borderLeftWidth, borderRightWidth].map(lqHelpers.string.parsePx);\r\n\r\n\t\t\t\treturn [borderLeft, borderRight].some(x => x === null)\r\n\t\t\t\t? null\r\n\t\t\t\t: this.__.$(el).width() + borderLeft + borderRight;\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the outer height of the first element (up to borders)\r\n\t * @returns {number|null}\r\n\t */\r\n\tborderBoxHeight(){\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tnameForStrict: \"#borderBoxHeight()\",\r\n\t\t\tdefaultValue: null,\r\n\t\t\tonFirst: el => {\r\n\t\t\t\tconst { borderTopWidth, borderBottomWidth } = getComputedStyle(el);\r\n\t\t\t\tconst [borderTop, borderBottom] = [borderTopWidth, borderBottomWidth].map(lqHelpers.string.parsePx);\r\n\r\n\t\t\t\treturn [borderTop, borderBottom].some(x => x === null)\r\n\t\t\t\t? null\r\n\t\t\t\t: this.__.$(el).height() + borderTop + borderBottom;\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the width of the margin box of the first element\r\n\t * @returns {number|null}\r\n\t */\r\n\tmarginBoxWidth(){\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tnameForStrict: \"#marginBoxWidth()\",\r\n\t\t\tdefaultValue: null,\r\n\t\t\tonFirst: el => {\r\n\t\t\t\tconst { marginLeft, marginRight } = getComputedStyle(el);\r\n\t\t\t\tconst [mleft, mright] = [marginLeft, marginRight].map(lqHelpers.string.parsePx);\r\n\r\n\t\t\t\treturn [mleft, mright].some(x => x === null)\r\n\t\t\t\t? null\r\n\t\t\t\t: this.__.$(el).outerWidth() + mleft + mright;\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the width of the margin box of the first element\r\n\t * @returns {number|null}\r\n\t */\r\n\tmarginBoxHeight(){\r\n\t\treturn this.__.doOnFirst({\r\n\t\t\tnameForStrict: \"#marginBoxWidth()\",\r\n\t\t\tdefaultValue: null,\r\n\t\t\tonFirst: el => {\r\n\t\t\t\tconst { marginTop, marginBottom } = getComputedStyle(el);\r\n\t\t\t\tconst [mtop, mbottom] = [marginTop, marginBottom].map(lqHelpers.string.parsePx);\r\n\r\n\t\t\t\treturn [mtop, mbottom].some(x => x === null)\r\n\t\t\t\t\t? null\r\n\t\t\t\t\t: this.__.$(el).outerHeight() + mtop + mbottom;\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default LightqueryCollection\r\n"],"file":"LightqueryCollection.js"}