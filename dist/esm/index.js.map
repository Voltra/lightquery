{"version":3,"sources":["../../src/index.js"],"names":["LightqueryFactory","LightqueryCollection","makePureLightquery","strict","µ","$","lq","lightquery","window","Object","assign"],"mappings":"AAAA,OAAO,mBAAP;AACA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC,C,CAEA;;AAEA;;;;;;AAKA,MAAMC,kBAAkB,GAAG,CAACC,MAAM,GAAG,IAAV,KAAmB,IAAIH,iBAAJ,CAAsBC,oBAAtB,EAA4CE,MAA5C,CAA9C;AAEA;;;;;;;AAKA,MAAMC,CAAC,GAAGF,kBAAkB,CAAC,IAAD,CAA5B;AAEA;;;;AAGA,MAAMG,CAAC,GAAGD,CAAV;AAEA;;;;AAGA,MAAME,EAAE,GAAGF,CAAX;AAEA;;;;AAGA,MAAMG,UAAU,GAAGH,CAAnB;;AAEA,IAAG,OAAOI,MAAP,KAAkB,WAArB,EAAiC;AAChCC,EAAAA,MAAM,CAACC,MAAP,CAAcF,MAAd,EAAsB;AACrBJ,IAAAA,CADqB;AAErBE,IAAAA,EAFqB;AAGrBC,IAAAA,UAHqB;AAIrBF,IAAAA,CAJqB;AAKfH,IAAAA;AALe,GAAtB;AAOA;;AAED,SACCE,CADD,EAECC,CAFD,EAGCC,EAHD,EAICC,UAJD,EAKIL,kBALJ","sourceRoot":"./src/","sourcesContent":["import \"./utils/polyfills\"\r\nimport LightqueryFactory from \"./LightqueryFactory\"\r\nimport LightqueryCollection from \"./LightqueryCollection\"\r\n\r\n//TODO: Make a lightquery plugin for sequency\r\n\r\n/**\r\n * Construct an instance of lightquery that derives from a plugin-free source\r\n * @param {boolean} [strict = true] - Whether or not to enable strict mode\r\n * @returns {LightqueryFactory}\r\n */\r\nconst makePureLightquery = (strict = true) => new LightqueryFactory(LightqueryCollection, strict);\r\n\r\n/**\r\n * @constant {LightqueryFactory} µ - Global lightquery factory function\r\n * @example µ(\"body\"); //-> LightqueryCollection[body]\r\n * µ([window, document, document.body]); //-> LightqueryCollection[window, document, body]\r\n */\r\nconst µ = makePureLightquery(true);\r\n\r\n/**\r\n * @constant {LightqueryFactory} $ - Alias for {@link µ}\r\n */\r\nconst $ = µ;\r\n\r\n/**\r\n * @constant {LightqueryFactory} lq - Alias for {@link µ}\r\n */\r\nconst lq = µ;\r\n\r\n/**\r\n * @constant {LightqueryFactory} lightquery - Alias for {@link µ}\r\n */\r\nconst lightquery = µ;\r\n\r\nif(typeof window !== \"undefined\"){\r\n\tObject.assign(window, {\r\n\t\tµ,\r\n\t\tlq,\r\n\t\tlightquery,\r\n\t\t$,\r\n        makePureLightquery,\r\n\t});\r\n}\r\n\r\nexport {\r\n\tµ,\r\n\t$,\r\n\tlq,\r\n\tlightquery,\r\n    makePureLightquery,\r\n}\r\n"],"file":"index.js"}