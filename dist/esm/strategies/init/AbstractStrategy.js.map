{"version":3,"sources":["../../../../src/strategies/init/AbstractStrategy.js"],"names":["UnimplementedError","AbstractStrategy","shouldProcess","selector","context","undefined","previousResults","process"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,iCAA/B;AAEA,eAAe,MAAMC,gBAAN,CAAsB;AACpC;;;;;;;AAOAC,EAAAA,aAAa,CAACC,QAAD,EAAWC,OAAO,GAAGC,SAArB,EAAgCC,eAAe,GAAG,EAAlD,EAAqD;AACjE,UAAM,IAAIN,kBAAJ,CAAuB,gEAAvB,CAAN;AACA;AAED;;;;;;;;;AAOAO,EAAAA,OAAO,CAACJ,QAAD,EAAWC,OAAO,GAAGC,SAArB,EAAgCC,eAAe,GAAG,EAAlD,EAAqD;AAC3D,UAAM,IAAIN,kBAAJ,CAAuB,0DAAvB,CAAN;AACA;;AArBmC","sourceRoot":"./src/","sourcesContent":["import UnimplementedError from \"../../errors/UnimplementedError\"\r\n\r\nexport default class AbstractStrategy{\r\n\t/**\r\n\t * Determine whether or not it should process the given selector\r\n\t * @param {any}               selector        The selector to process\r\n \t * @param {DomElementType|undefined} context         The context to get elements from\r\n \t * @param {Iterable<DomElementType>} previousResults The previous set of results\r\n\t * @returns {boolean}\r\n\t */\r\n\tshouldProcess(selector, context = undefined, previousResults = []){\r\n\t\tthrow new UnimplementedError(\"Call to unimplemented AbstractStrategy#shouldProcess(selector)\");\r\n\t}\r\n\r\n\t/**\r\n\t * Processes the given selector\r\n\t * @param {any}               selector        The selector to process\r\n \t * @param {DomElementType|undefined} context         The context to get elements from\r\n \t * @param {Iterable<DomElementType>} previousResults The previous set of results\r\n\t * @returns {Iterable<DomElementType>}\r\n\t */\r\n\tprocess(selector, context = undefined, previousResults = []){\r\n\t\tthrow new UnimplementedError(\"Call to unimplemented AbstractStrategy#process(selector)\");\r\n\t}\r\n}\r\n"],"file":"AbstractStrategy.js"}